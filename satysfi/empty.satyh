% -*- coding: utf-8 -*-
@require: pervasives
@require: math
@require: code

module StdJa : sig
  val document : math -> document
end = struct
  let font-ratio-latin = 1.
  let font-ratio-cjk = 0.88

  let font-latin-roman  = (`Junicode`   , font-ratio-latin, 0.)
  let font-latin-italic = (`Junicode-it`, font-ratio-latin, 0.)
  let font-latin-sans   = (`lmsans`    , font-ratio-latin, 0.)
  let font-cjk-mincho   = (`ipaexm`    , font-ratio-cjk  , 0.)
  let font-cjk-gothic   = (`ipaexg`    , font-ratio-cjk  , 0.)

  let set-cjk-font font ctx =
    ctx |> set-font HanIdeographic font
        |> set-font Kana           font


  let get-standard-context wid =
    get-initial-context wid (command \math)
      |> set-math-font `lmodern`


  let document m =
    % -- constants
    let thickness = 0.5pt in
    let ctx-doc = get-standard-context 400pt in
    % -- page settings --
    let pagecontf _ =
      (|
        text-origin = (0pt, 0pt);
        text-height = 100pt;
      |)
    in
    let pagepartsf _ =
      (|
        header-origin  = (0pt,0pt);
        header-content = block-nil;
        footer-origin  = (0pt,0pt);
        footer-content = block-nil;
      |)
    in
    let bb = read-inline ctx-doc {${#m}} |> form-paragraph ctx-doc in
    page-break A4Paper pagecontf pagepartsf bb
end


let document = StdJa.document
  % ad-hoc
